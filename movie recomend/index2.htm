
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Traditional Movie推荐</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            background-color: #f5f5f5;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header {
            text-align: center;
            color: #333;
            margin-bottom: 2rem;
        }

        .movie-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin-top: 2rem;
        }

        .movie-item {
            width: 100%;
            height: 200px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .movie-item:hover {
            transform: translateY(-5px);
        }

        .movie-info {
            text-align: center;
            margin-bottom: 2rem;
        }

        .title {
            font-size: 1.5rem;
            color: #1a1a1a;
            margin-bottom: 0.5rem;
        }

        .genre {
            font-size: 0.9rem;
            color: #444;
            line-height: 0.8;
        }

        .recommendations {
            background-color: #f8f8f8;
            padding: 2rem;
            border-radius: 10px;
            margin-top: 2rem;
        }

        button {
            background-color: transparent;
            color: #333;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .search {
            margin-bottom: 1rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Traditional Movie推荐</h1>
        </div>

        <div class="movie-grid" id="movieGrid"></div>

        <div class="email-input" id="emailInput">
            <input type="text" placeholder="添加邮箱">
            <button onclick="addEmailToUser()">加入邮箱信息</button>
        </div>

        <div class="recommendations" id="recommendationsList">
            <!-- 建议内容 -->
        </div>

        <div class="movie-info" id="movieInfo">
            <!-- 建议电影信息 -->
        </div>
    </div>

    <script>
        // 短暂内容
        const movieGrid = document.getElementById('movieGrid');
        const emailInput = document.getElementById('emailInput');
        let userEmail;

        function saveMovie() {
            const movieInfo = document.createElement('div');
            movieInfo.className = 'movie-info';
            movieInfo.textContent = currentMovieList[i].title;

            for (let j=0; j<movieInfo.children.length; j++) {
                movieInfo.children[j].className = 'movie-item';
            }

            movieGrid.appendChild(movieInfo);
            userEmail = this.dataset.userEmail;

            document.getElementById('emailInput').textContent = userEmail;
        }

        function addEmailToUser() {
            emailInput.textContent = currentMovieList[i].email;
            emailInput.style.marginTop = '0.25rem ';
        }

        function loadMovies() {
            const movieList = Object.values(movieGrid.innerHTML.children);

            for (let i=0; i<movieList.length; i++) {
                const movieElement = document.createElement('div');
                movieElement.className = 'movie-item';

                const title = document.createElement('h3');
                title.className = 'title';
                title.textContent = movieList[i].title;
                movieElement.appendChild(title);

                if (movieList[i].genre) {
                    genreDiv = document.createElement('div');
                    genreDiv.className = 'genre';
                    genreDiv.innerHTML = movieList[i].genre;
                    movieElement.appendChild(genreDiv);
                }

                if (movieList[i].recommendedations) {
                    movieList[i].reCOMMendations.forEach(recommendation => {
                        const recommendationElement = document.createElement('div');
                        recommendationElement.className = 'recommendation';

                        let linkText = '';

                        for (let k=0; k<recommendations.length; k++) {
                            if (recommendations[k]) {
                                linkText += <a href="https://www.—/?">推荐电影</a>;
                            }
                        }

                        recommendationElement.innerHTML = document.createElement('li');
                        recommendationElement.textContent = linkText;
                        movieList[i].reCOMMendations.forEach(recommendation => {
                            recommendationElement.appendChild(recommendation);
                        });
                        movieElement.appendChild(recommendationElement);
                    });

                }

                movieElement.className = 'movie-item';
                movieGrid.appendChild(movieElement);
            }

            for (let j=0; j<movieList.length; j++) {
                if (j != i) {
                    const movieElement = movieGrid.children[j].appendChild(null);
                } else {
                    break;
                }
            }
        }

        // 当 loadMovies 函数被调用前
        loadMovies();

        emailInput.addEventListener('input', (e) => {
            currentMovieList[i] = e.target.value;
            saveMovie();
        });

        emailInput.addEventListener('click', () => loadMovies());
    </script>
</body>
</html>